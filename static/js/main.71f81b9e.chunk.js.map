{"version":3,"sources":["components/DisplayWeather.js","components/NavBar.js","App.js","index.js"],"names":["DisplayWeather","props","weatherData","location","temp","country","desc","wind_speed","icon","atmp","humidity","rain","img_url","className","src","alt","NavBar","onSubmit","e","changeWeather","placeholder","onChange","changeLoc","target","value","App","state","cords","longitude","latitude","data","inputLoc","change","setState","event","preventDefault","url","Axios","get","then","res","name","Number","parseFloat","main","toFixed","sys","weather","description","wind","speed","pressure","navigator","geolocation","getCurrentPosition","position","newCords","coords","setTimeout","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71f81b9e.chunk.js","sourcesContent":["import React from 'react';\n\nfunction DisplayWeather(props){\n\tconst {location,temp,country,desc,wind_speed,icon,atmp,humidity,rain}=props.weatherData;\n\t//console.log(props.cords);\n\tconst img_url='http://openweathermap.org/img/wn/'+icon+'@2x.png'\n\treturn(\n        <div className=\"user-weather\">\n            <div className=\"row\">\n                <div className=\"col-md-3 weather-temp\">\n                    <h1>{temp}<sup>o</sup>C , {desc}</h1>\n                    <h4>location</h4>\n                    <p>{location} , {country}</p>\n                </div>\n\n                <div className=\"col-md-9\">\n                    <img className=\"mainImg\" src={img_url} alt=\"weather-img\" />\n                </div>\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col-md-3 weather-info\">\n                    <p><b>Wind Speed</b>(km/hr)</p>\n                    <h2>{wind_speed}</h2>\n                </div>\n\n                <div className=\"col-md-3 weather-info\">\n                    <p><b>Preassure</b>(millibar)</p>\n                    <h2>{atmp}</h2>\n                </div>\n\n                <div className=\"col-md-3 weather-info\">\n                    <p><b>Precipitaion-last hour</b>(mm)</p>\n                    <h2>{rain}</h2>\n                </div>\n\n                <div className=\"col-md-3 weather-info\">\n                    <p><b>Humidity</b>(%)</p>\n                    <h2>{humidity}</h2>\n                </div>\n\n            </div>\n        </div>\n\t\t);\n\n};\n\nexport default DisplayWeather;","import React from 'react';\n\nexport default function NavBar(props){\n\treturn(\n\t\t<div className='row'>\n\t\t\t<div className='col-md-6'>\n\t\t\t\t<h1 className='title'>Weather</h1>\n\t\t\t</div>\n\t\t\t<form className='region' onSubmit={(e)=>props.changeWeather(e)}>\n\t\t\t\t<input className='regioninput' placeholder='Enter your region' onChange={(e)=>props.changeLoc(e.target.value)}/>\n\t\t\t</form>\n\t\t\t<div className='col-md-6'>\n\n\t\t\t</div>\n\t\t</div>\n\t\t)\n}","import React,{Component} from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport DisplayWeather from './components/DisplayWeather'\nimport NavBar from './components/NavBar'\n\nclass App extends Component{\n  state={\n    cords:{\n      longitude:28,\n      latitude:83\n    },\n    data:{},\n    inputLoc:''\n  }\n\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position=>{\n      let newCords={\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      }\n      this.setState({cords:newCords});\n      //console.log(\"Inside\",this.state);//displays new values\n    });\n    };\n    \n    setTimeout(() => {\n\n    Axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.cords.latitude}&lon=${this.state.cords.longitude}&appid=55a6b2683f3c85dcb1fe4e0d4039dc0a`).then(res=>{\n      //console.log(res)\n      let weatherData={\n        location:res.data.name,\n        temp:Number.parseFloat(res.data.main.temp-273).toFixed(2),\n        country:res.data.sys.country,\n        //weather:res.data.weather[0].main,\n        desc:res.data.weather[0].description,\n        wind_speed:res.data.wind.speed,\n        //wind_deg:res.data.wind.deg,\n        icon:res.data.weather[0].icon,\n        atmp:res.data.main.pressure,\n        humidity:res.data.main.humidity,\n        rain:('rain')in res.data?res.data.rain['1h']:0\n      }\n       //console.log(weatherData)\n      this.setState({data:weatherData})\n    });\n    }, 1400);\n  };\n\n\n    change=(value)=>{\n      this.setState({inputLoc:value});\n    }\n\n    changeWeather=(event)=>{\n      event.preventDefault();\n\n      //Api Call\n      const url=`https://api.openweathermap.org/data/2.5/weather?q=${this.state.inputLoc}&appid=55a6b2683f3c85dcb1fe4e0d4039dc0a`\n        //console.log(url);\n      Axios.get(url).then(res=>{\n        //console.log(res);\n\n\n        let weatherData={\n        location:res.data.name,\n        temp:Number.parseFloat(res.data.main.temp-273).toFixed(2),\n        country:res.data.sys.country,\n        //weather:res.data.weather[0].main,\n        desc:res.data.weather[0].description,\n        wind_speed:res.data.wind.speed,\n        //wind_deg:res.data.wind.deg,\n        icon:res.data.weather[0].icon,\n        atmp:res.data.main.pressure,\n        humidity:res.data.main.humidity,\n        rain:('rain')in res.data?res.data.rain['1h']:0\n      }\n       //console.log(weatherData)\n      this.setState({data:weatherData})\n\n\n\n      });\n    \n    }\n  render(){\n  return (\n    <div className=\"App\">\n    <div className='container'>\n    <NavBar changeLoc={this.change} changeWeather={this.changeWeather} />\n      <DisplayWeather weatherData={this.state.data}/>\n    </div>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}